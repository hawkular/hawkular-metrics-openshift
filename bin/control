#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

function extractUrl() {
	local url=$(curl --silent $1)
	local url=`echo $url | grep -v sha1 | grep -v md5 | grep war | grep -o '<a href=['"'"'"][^"'"'"']*['"'"'"]'  | sed -e 's/^<a href=["'"'"']//' -e 's/["'"'"']$//' | grep war`
	echo $url
}

function start() {
   if [ -d $OPENSHIFT_DATA_DIR/wildfly/standalone/deployments ]
   then
      if [ "$OPENSHIFT_RHQ_METRICS_DISTRIBUTION" = "source" ]
      then
         cd $OPENSHIFT_DATA_DIR
         git clone https://github.com/rhq-project/rhq-metrics.git
         cd rhq-metrics
      
         mvn -T 4 -pl :rest-servlet,:rhq-metrics-core,:rhq-metrics-api install -DskipTests -Dmaven.test.skip=true -Dmaven.repo.local=$OPENSHIFT_DATA_DIR/.m2/repository
         cp rest-servlet/target/rhq-metric-rest*.war $OPENSHIFT_DATA_DIR/wildfly/standalone/deployments
         sleep 7
         
         #mvn -pl :explorer install -DskipTests -Dmaven.test.skip=true -Dmaven.repo.local=$OPENSHIFT_DATA_DIR/.m2/repository
         #cp ui/explorer/target/explorer-*.war $OPENSHIFT_DATA_DIR/wildfly/standalone/deployments
         #sleep 7
         
         #mvn -T 2 -pl :metrics-console install -DskipTests -Dmaven.test.skip=true -Dmaven.repo.local=$OPENSHIFT_DATA_DIR/.m2/repository
         #cp ui/console/target/metrics-console-*.war $OPENSHIFT_DATA_DIR/wildfly/standalone/deployments
      else
         cd $OPENSHIFT_DATA_DIR/wildfly/standalone/deployments

         wget -N $(extractUrl "https://origin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/rest-servlet/${OPENSHIFT_RHQ_METRICS_VERSION}/")
         wget -N $(extractUrl "https://origin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/metrics-console/${OPENSHIFT_RHQ_METRICS_VERSION}/")
         wget -N $(extractUrl "https://rigin-repository.jboss.org/nexus/content/repositories/public/org/rhq/metrics/explorer/${OPENSHIFT_RHQ_METRICS_VERSION}/")
      fi
   fi
   
   echo "Starting RHQ Metrics cartridge"
   $OPENSHIFT_DATA_DIR/cassandra/bin/cassandra
   export CQLSH_HOST=$OPENSHIFT_RHQM_IP
   export CQLSH_PORT=19160

   export CASSANDRA_CQL_PORT=19042
   export CASSANDRA_NODES=$OPENSHIFT_RHQM_IP
   sleep 15

   $OPENSHIFT_DATA_DIR/wildfly/bin/standalone.sh -b $OPENSHIFT_RHQM_IP -bmanagement=$OPENSHIFT_RHQM_IP -Drhq-metrics.backend=$OPENSHIFT_RHQ_METRICS_BACKEND -Drhq-metrics.cassandra-nodes=$CASSANDRA_NODES -Drhq-metrics.cassandra-cql-port=$CASSANDRA_CQL_PORT 2>&1 &
}

function stop() {
   echo "Stopping RHQ Metrics cartridge"

   PIDS_TO_KILL=`ps -ef | grep cassandra | grep -v grep | awk '{ print $2 }'`
   if [ ! -z "$PIDS_TO_KILL" ]
   then
      kill "$PIDS_TO_KILL" > /dev/null 2>&1
   fi

   PIDS_TO_KILL=`ps -ef | grep standalone | grep -v grep | awk '{ print $2 }'`
   if [ ! -z "$PIDS_TO_KILL" ]
   then
      kill "$PIDS_TO_KILL" > /dev/null 2>&1
   fi

   PIDS_TO_KILL=`ps -ef | grep java | grep -v grep | awk '{ print $2 }'`
   if [ ! -z "$PIDS_TO_KILL" ]
   then
      kill "$PIDS_TO_KILL" > /dev/null 2>&1
   fi
}

function restart() {
    stop
    start
}

function status() {
  client_result "Application is running"
}

function reload() {
    client_result "Reloading RHQ metrics cartridge"
    restart
}

function tidy() {
  client_message "Emptying diy logs in dir: $OPENSHIFT_LOG_DIR"
}

case "$1" in
  start)     start ;;
  stop)      stop ;;
  restart)   restart ;;
  status)    status ;;
  reload)    reload ;;
  tidy)      tidy ;;
  *)         exit 0
esac
